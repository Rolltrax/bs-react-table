module ReactTable = {
  [@bs.module "react-table"]
  external reactClass : ReasonReact.reactClass = "default";
  let make =
      (
        ~data: option(array(Js.t({..})))=?,
        ~loading: option(bool)=?,
        ~showPagination: option(bool)=?,
        ~showPaginationTop: option(bool)=?,
        ~showPaginationBottom: option(bool)=?,
        ~showPageSizeOptions: option(bool)=?,
        ~pageSizeOptions: option(array(int))=?,
        ~defaultPageSize: option(int)=?,
        ~minRows: option(int)=?,
        ~showPageJump: option(bool)=?,
        ~collapseOnSortingChange: option(bool)=?,
        ~collapseOnPageChange: option(bool)=?,
        ~collapseOnDataChange: option(bool)=?,
        ~freezeWhenExpanded: option(bool)=?,
        ~sortable: option(bool)=?,
        ~multiSort: option(bool)=?,
        ~resizable: option(bool)=?,
        ~filterable: option(bool)=?,
        ~defaultSortDesc: option(bool)=?,
        ~defaultSorted: option(array(Js.t({..})))=?,
        ~defaultFiltered: option(array(Js.t({..})))=?,
        ~defaultResized: option(array(Js.t({..})))=?,
        ~defaultExpanded: option(Js.t({..}))=?,
        ~defaultFilterMethod:
           option((Js.t({..}), Js.t({..}), Js.t({..})) => bool)=?,
        ~defaultSortMethod: option((Js.t({..}), Js.t({..}), bool) => int)=?,
        ~padRowComponent: option(unit => ReasonReact.reactElement)=?,
        ~page: option(int)=?,
        ~pageSize: option(int)=?,
        ~sorted: option(array(Js.t({..})))=?,
        ~filtered: option(array(Js.t({..})))=?,
        ~resized: option(array(Js.t({..})))=?,
        ~expanded: option(Js.t({..}))=?,
        ~onPageChange: option(unit => unit)=?,
        ~onPageSizeChange: option(unit => unit)=?,
        ~onSortedChange: option(unit => unit)=?,
        ~onFilteredChange: option(unit => unit)=?,
        ~onResizedChange: option(unit => unit)=?,
        ~onExpandedChange: option(unit => unit)=?,
        ~pivotKey: option(string)=?,
        ~pivotValKey: option(string)=?,
        ~pivotIDKey: option(string)=?,
        ~subRowsKey: option(string)=?,
        ~aggregatedKey: option(string)=?,
        ~nestingLevelKey: option(string)=?,
        ~originalKey: option(string)=?,
        ~indexKey: option(string)=?,
        ~groupedByPivotKey: option(string)=?,
        ~onFetchData: option(unit => unit)=?,
        ~className: option(string)=?,
        ~style: option(Js.t({..}))=?,
        ~getProps: option(unit => Js.t({..}))=?,
        ~getTableProps: option(unit => Js.t({..}))=?,
        ~getTheadGroupProps: option(unit => Js.t({..}))=?,
        ~getTheadGroupTrProps: option(unit => Js.t({..}))=?,
        ~getTheadGroupThProps: option(unit => Js.t({..}))=?,
        ~getTheadProps: option(unit => Js.t({..}))=?,
        ~getTheadTrProps: option(unit => Js.t({..}))=?,
        ~getTheadThProps: option(unit => Js.t({..}))=?,
        ~getTheadFilterProps: option(unit => Js.t({..}))=?,
        ~getTheadFilterTrProps: option(unit => Js.t({..}))=?,
        ~getTheadFilterThProps: option(unit => Js.t({..}))=?,
        ~getTbodyProps: option(unit => Js.t({..}))=?,
        ~getTrGroupProps: option(unit => Js.t({..}))=?,
        ~getTrProps: option(unit => Js.t({..}))=?,
        ~getThProps: option(unit => Js.t({..}))=?,
        ~getTdProps: option(unit => Js.t({..}))=?,
        ~getTfootProps: option(unit => Js.t({..}))=?,
        ~getTfootTrProps: option(unit => Js.t({..}))=?,
        ~getTfootThProps: option(unit => Js.t({..}))=?,
        ~getPaginationProps: option(unit => Js.t({..}))=?,
        ~getLoadingProps: option(unit => Js.t({..}))=?,
        ~getNoDataProps: option(unit => Js.t({..}))=?,
        ~getResizerProps: option(unit => Js.t({..}))=?,
        ~column: option(Js.t({..}))=?,
        ~expanderDefaults: option(Js.t({..}))=?,
        ~pivotDefaults: option(Js.t({..}))=?,
        ~previousText: option(string)=?,
        ~nextText: option(string)=?,
        ~loadingText: option(string)=?,
        ~noDataText: option(string)=?,
        ~pageText: option(string)=?,
        ~ofText: option(string)=?,
        ~rowsText: option(string)=?,
        ~columns: array(Js.t({..})),
        ~label: option(string),
      ) =>
    ReasonReact.wrapJsForReason(
      ~reactClass,
      ~props=
        Js.Nullable.(
          {
            "data": fromOption(data),
            "loading": fromOption(loading),
            "showPagination": fromOption(showPagination),
            "showPaginationTop": fromOption(showPaginationTop),
            "showPaginationBottom": fromOption(showPaginationBottom),
            "showPageSizeOptions": fromOption(showPageSizeOptions),
            "pageSizeOptions": fromOption(pageSizeOptions),
            "defaultPageSize": fromOption(defaultPageSize),
            "minRows": fromOption(minRows),
            "showPageJump": fromOption(showPageJump),
            "collapseOnSortingChange": fromOption(collapseOnSortingChange),
            "collapseOnPageChange": fromOption(collapseOnPageChange),
            "collapseOnDataChange": fromOption(collapseOnDataChange),
            "freezeWhenExpanded": fromOption(freezeWhenExpanded),
            "sortable": fromOption(sortable),
            "multiSort": fromOption(multiSort),
            "resizable": fromOption(resizable),
            "filterable": fromOption(filterable),
            "defaultSortDesc": fromOption(defaultSortDesc),
            "defaultSorted": fromOption(defaultSorted),
            "defaultFiltered": fromOption(defaultFiltered),
            "defaultResized": fromOption(defaultResized),
            "defaultExpanded": fromOption(defaultExpanded),
            "defaultFilterMethod": fromOption(defaultFilterMethod),
            "defaultSortMethod": fromOption(defaultSortMethod),
            "padRowComponent": fromOption(padRowComponent),
            "page": fromOption(page),
            "pageSize": fromOption(pageSize),
            "sorted": fromOption(sorted),
            "filtered": fromOption(filtered),
            "resized": fromOption(resized),
            "expanded": fromOption(expanded),
            "onPageChange": fromOption(onPageChange),
            "onPageSizeChange": fromOption(onPageSizeChange),
            "onSortedChange": fromOption(onSortedChange),
            "onFilteredChange": fromOption(onFilteredChange),
            "onResizedChange": fromOption(onResizedChange),
            "onExpandedChange": fromOption(onExpandedChange),
            "pivotKey": fromOption(pivotKey),
            "pivotIDKey": fromOption(pivotIDKey),
            "pivotValKey": fromOption(pivotValKey),
            "subRowsKey": fromOption(subRowsKey),
            "aggregatedKey": fromOption(aggregatedKey),
            "nestingLevelKey": fromOption(nestingLevelKey),
            "originalKey": fromOption(originalKey),
            "indexKey": fromOption(indexKey),
            "groupedByPivotKey": fromOption(groupedByPivotKey),
            "onFetchData": fromOption(onFetchData),
            "className": fromOption(className),
            "style": fromOption(style),
            "getProps": fromOption(getProps),
            "getTableProps": fromOption(getTableProps),
            "getTheadGroupProps": fromOption(getTheadGroupProps),
            "getTheadGroupTrProps": fromOption(getTheadGroupTrProps),
            "getTheadGroupThProps": fromOption(getTheadGroupThProps),
            "getTheadProps": fromOption(getTheadProps),
            "getTheadTrProps": fromOption(getTheadTrProps),
            "getTheadThProps": fromOption(getTheadThProps),
            "getTheadFilterProps": fromOption(getTheadFilterProps),
            "getTheadFilterTrProps": fromOption(getTheadFilterTrProps),
            "getTheadFilterThProps": fromOption(getTheadFilterThProps),
            "getTbodyProps": fromOption(getTbodyProps),
            "getTrGroupProps": fromOption(getTrGroupProps),
            "getTrProps": fromOption(getTrProps),
            "getThProps": fromOption(getThProps),
            "getTdProps": fromOption(getTdProps),
            "getTfootProps": fromOption(getTfootProps),
            "getTfootTrProps": fromOption(getTfootTrProps),
            "getTfootThProps": fromOption(getTfootThProps),
            "getPaginationProps": fromOption(getPaginationProps),
            "getLoadingProps": fromOption(getLoadingProps),
            "getNoDataProps": fromOption(getNoDataProps),
            "getResizerProps": fromOption(getResizerProps),
            "column": fromOption(column),
            "expanderDefaults": fromOption(expanderDefaults),
            "pivotDefaults": fromOption(pivotDefaults),
            "previousText": fromOption(previousText),
            "nextText": fromOption(nextText),
            "loadingText": fromOption(loadingText),
            "noDataText": fromOption(noDataText),
            "pageText": fromOption(pageText),
            "ofText": fromOption(ofText),
            "rowsText": fromOption(rowsText),
            "columns": columns,
            "label": fromOption(label),
          }
        ),
    );
};
