  [@bs.module "react-table"][@react.component]
  external make :
      (
        ~data: array(Js.t({..}))=?,
        ~loading: bool=?,
        ~showPagination: bool=?,
        ~showPaginationTop: bool=?,
        ~showPaginationBottom: bool=?,
        ~showPageSizeOptions: bool=?,
        ~pageSizeOptions: array(int)=?,
        ~defaultPageSize: int=?,
        ~minRows: int=?,
        ~showPageJump: bool=?,
        ~collapseOnSortingChange: bool=?,
        ~collapseOnPageChange: bool=?,
        ~collapseOnDataChange: bool=?,
        ~freezeWhenExpanded: bool=?,
        ~sortable: bool=?,
        ~multiSort: bool=?,
        ~resizable: bool=?,
        ~filterable: bool=?,
        ~defaultSortDesc: bool=?,
        ~defaultSorted: array(Js.t({..}))=?,
        ~defaultFiltered: array(Js.t({..}))=?,
        ~defaultResized: array(Js.t({..}))=?,
        ~defaultExpanded: Js.t({..})=?,
        ~defaultFilterMethod:
           (Js.Dict.t(string), Js.Dict.t({..}), Js.Dict.t({..})) => bool=?,
        ~defaultSortMethod:
           (Js.t({..}), Js.t({..}), bool) => int=?,
        ~padRowComponent: unit => ReasonReact.reactElement=?,
        ~page: int=?,
        ~pageSize: int=?,
        ~sorted: array(Js.t({..}))=?,
        ~filtered: array(Js.t({..}))=?,
        ~resized: array(Js.t({..}))=?,
        ~expanded: Js.t({..})=?,
        ~onPageChange: unit => unit=?,
        ~onPageSizeChange: unit => unit=?,
        ~onSortedChange: unit => unit=?,
        ~onFilteredChange: unit => unit=?,
        ~onResizedChange: unit => unit=?,
        ~onExpandedChange: unit => unit=?,
        ~pivotKey: string=?,
        ~pivotValKey: string=?,
        ~pivotIDKey: string=?,
        ~subRowsKey: string=?,
        ~aggregatedKey: string=?,
        ~nestingLevelKey: string=?,
        ~originalKey: string=?,
        ~indexKey: string=?,
        ~groupedByPivotKey: string=?,
        ~onFetchData: unit => unit=?,
        ~className: string=?,
        ~style: Js.t({..})=?,
        ~getProps: unit => Js.t({..})=?,
        ~getTableProps: unit => Js.t({..})=?,
        ~getTheadGroupProps: unit => Js.t({..})=?,
        ~getTheadGroupTrProps: unit => Js.t({..})=?,
        ~getTheadGroupThProps: unit => Js.t({..})=?,
        ~getTheadProps: unit => Js.t({..})=?,
        ~getTheadTrProps: unit => Js.t({..})=?,
        ~getTheadThProps: unit => Js.t({..})=?,
        ~getTheadFilterProps: unit => Js.t({..})=?,
        ~getTheadFilterTrProps: unit => Js.t({..})=?,
        ~getTheadFilterThProps: unit => Js.t({..})=?,
        ~getTbodyProps: unit => Js.t({..})=?,
        ~getTrGroupProps: unit => Js.t({..})=?,
        ~getTrProps: unit => Js.t({..})=?,
        ~getThProps: unit => Js.t({..})=?,
        ~getTdProps: unit => Js.t({..})=?,
        ~getTfootProps: unit => Js.t({..})=?,
        ~getTfootTrProps: unit => Js.t({..})=?,
        ~getTfootThProps: unit => Js.t({..})=?,
        ~getPaginationProps: unit => Js.t({..})=?,
        ~getLoadingProps: unit => Js.t({..})=?,
        ~getNoDataProps: unit => Js.t({..})=?,
        ~getResizerProps: unit => Js.t({..})=?,
        ~column: Js.t({..})=?,
        ~expanderDefaults: Js.t({..})=?,
        ~pivotDefaults: Js.t({..})=?,
        ~previousText: string=?,
        ~nextText: string=?,
        ~loadingText: string=?,
        ~noDataText: string=?,
        ~pageText: string=?,
        ~ofText: string=?,
        ~rowsText: string=?,
        ~columns: array(Js.t({..})),
        ~label: option(string)
      ) => React.element = "default";
